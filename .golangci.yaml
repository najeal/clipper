# https://golangci-lint.run/usage/configuration/
run:
  timeout: 10m

  # Enables skipping of directories:
  # - vendor$, third_party$, testdata$, examples$, Godeps$, builtin$
  # Default: true
  skip-dirs-use-default: false

  # If set we pass it to "go list -mod={option}". From "go help modules":
  # If invoked with -mod=readonly, the go command is disallowed from the implicit
  # automatic updating of go.mod described above. Instead, it fails when any changes
  # to go.mod are needed. This setting is most useful to check that go.mod does
  # not need updates, such as in a continuous integration and testing system.
  # If invoked with -mod=vendor, the go command assumes that the vendor
  # directory holds the correct copies of dependencies and ignores
  # the dependency descriptions in go.mod.
  #
  # Allowed values: readonly|vendor|mod
  # By default, it isn't set.
  modules-download-mode: readonly

output:
  # Make issues output unique by line.
  # Default: true
  uniq-by-line: false

issues:
  # Maximum issues count per one linter.
  # Set to 0 to disable.
  # Default: 50
  max-issues-per-linter: 0

  # Maximum count of issues with the same text.
  # Set to 0 to disable.
  # Default: 3
  max-same-issues: 0

linters:
  disable-all: true
  enable:
    - asciicheck
    - bodyclose
    - depguard
    - dupword
    - errcheck
    - errorlint
    - exportloopref
    - forbidigo
    - gci
    - goconst
    - gocritic
    # - goerr113
    - gofmt
    - gofumpt
    # - gomnd
    - goprintffuncname
    - gosec
    - gosimple
    - govet
    - importas
    - ineffassign
    # - lll
    - misspell
    - nakedret
    - noctx
    - nolintlint
    - perfsprint
    - prealloc
    - predeclared
    - revive
    - spancheck
    - staticcheck
    - stylecheck
    - tagalign
    - testifylint
    - typecheck
    - unconvert
    - unparam
    - unused
    - usestdlibvars
    - whitespace

linters-settings:
  depguard:
    rules:
      packages:
        deny:
          - pkg: "io/ioutil"
            desc: io/ioutil is deprecated. Use package io or os instead.
          - pkg: "github.com/stretchr/testify/assert"
            desc: github.com/stretchr/testify/require should be used instead.
          - pkg: "github.com/golang/mock/gomock"
            desc: go.uber.org/mock/gomock should be used instead.